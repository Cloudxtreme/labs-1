{% set kibana_name = salt['pillar.get']('kibana:pkg:name') -%}
{% set kibana_dir = salt['pillar.get']('kibana:install_dir') -%}
#!/bin/bash
#
# kibana -- startup script for kibana4
#
# chkconfig: - 85 15
# processname: kibana
# pidfile: /var/run/kibana.pid
# description: Kibana is a webui to visualize data
#
### BEGIN INIT INFO
# Provides: kibana4
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop kibana
### END INIT INFO
#
#

PIDFILE="/var/run/{{ kibana_name }}.run"
KIBANA_DIR="{{ kibana_dir }}/{{ kibana_name }}"

status() {
        if [ -f "$PIDFILE" ] ; then
          pid=`cat "$PIDFILE"`
          if kill -0 $pid > /dev/null 2> /dev/null ; then
            return 0
          else
            return 2 # program is dead but pid file exists
          fi
        else
          return 3 # program is not running
        fi
}

start() {
        echo -n "Starting Kibana Daemon: "
        if [ $(status) ]; then
            PID=`cat $PIDFILE`
            echo Kibana already running: $PID
            exit 1;
        else
            cd $KIBANA_DIR
            PID=`./bin/kibana >/dev/null 2>&1 & echo $! > $PIDFILE`
            echo `cat $PIDFILE`
        fi

}

stop() {
        echo -n "Shutting down Kibana Daemon: "
        echo
        kill $(cat ${PIDFILE}) && rm ${PIDFILE}
        return $?
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage:  {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $?
